// <auto-generated />
using System;
using DDDUniversidade.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDUniversidade.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325013020_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aberto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inscritos")
                        .HasColumnType("int");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Postagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("Comentarios")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Curtidas")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Postagens");
                });

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Seguidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SegueId")
                        .HasColumnType("int");

                    b.Property<int>("SeguidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeguidoId");

                    b.HasIndex("SegueId", "SeguidoId")
                        .IsUnique();

                    b.ToTable("Seguidores");
                });

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Postagem", b =>
                {
                    b.HasOne("DDDUniversidade.Domain.Models.Usuario", "Autor")
                        .WithMany("Postagens")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Seguidor", b =>
                {
                    b.HasOne("DDDUniversidade.Domain.Models.Usuario", "Segue")
                        .WithMany("Seguindo")
                        .HasForeignKey("SegueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DDDUniversidade.Domain.Models.Usuario", "Seguido")
                        .WithMany("Seguidores")
                        .HasForeignKey("SeguidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Segue");

                    b.Navigation("Seguido");
                });

            modelBuilder.Entity("DDDUniversidade.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Postagens");

                    b.Navigation("Seguidores");

                    b.Navigation("Seguindo");
                });
#pragma warning restore 612, 618
        }
    }
}
